name: 'ABM Benchmarks'
description: 'Run ABM benchmarks on Galaxy servers'

inputs:
  org-api-key:
    description: 'API key for usegalaxy.org'
    required: false
  org-au-api-key:
    description: 'API key for usegalaxy.org.au'
    required: false
  eu-api-key:
    description: 'API key for usegalaxy.eu'
    required: false
  custom-server-url:
    description: 'URL of a custom Galaxy server'
    required: false
  custom-server-api-key:
    description: 'API key for the custom Galaxy server'
    required: false
  histories:
    description: 'List of history URLs in the format "name: url" (one per line)'
    required: true
  histories-path:
    description: 'Path to the file containing the list of history URLs'
    required: false
  workflows:
    description: 'List of workflow URLs in the format "name: url" (one per line)'
    required: false
  workflows-path:
    description: 'Path to the file containing the list of workflow URLs'
    required: false
  benchmarks-file:
    description: 'Contents of the benchmarks/testwf.yaml file'
    required: false
  benchmarks-file-path:
    description: 'File path of the benchmarks/testwf.yaml file in the repository'
    required: false
  experiments-file:
    description: 'Contents of the experiments/testwf.yaml file'
    required: false
  experiments-file-path:
    description: 'File path of the experiments/testwf.yaml file in the repository'
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4

    - name: Run ABM
      env:
        ORG_API_KEY: ${{ inputs.org-api-key }}
        ORG_AU_API_KEY: ${{ inputs.org-au-api-key }}
        EU_API_KEY: ${{ inputs.eu-api-key }}
        CUSTOM_SERVER_URL: ${{ inputs.custom-server-url }}
        CUSTOM_SERVER_API_KEY: ${{ inputs.custom-server-api-key }}
      run: |
        python3 -m venv .venv
        source .venv/bin/activate
        pip install gxabm
        mkdir -p ~/.abm
     
        servers=()
        
        if [ -n "$ORG_API_KEY" ]; then
          servers+=("usa")
          cat << EOF >> ~/.abm/profile.yml
        usa:
          url: https://usegalaxy.org
          key: $ORG_API_KEY
        EOF
        fi
        
        if [ -n "$ORG_AU_API_KEY" ]; then
          servers+=("australia")
          cat << EOF >> ~/.abm/profile.yml
        australia:
          url: https://usegalaxy.org.au
          key: $ORG_AU_API_KEY
        EOF
        fi
        
        if [ -n "$EU_API_KEY" ]; then
          servers+=("europe")
          cat << EOF >> ~/.abm/profile.yml
        europe:
          url: https://usegalaxy.eu
          key: $EU_API_KEY
        EOF
        fi

        if [ -n "$CUSTOM_SERVER_URL" ] && [ -n "$CUSTOM_SERVER_API_KEY" ]; then
          servers+=("custom")
          cat << EOF >> ~/.abm/profile.yml
        custom:
          url: $CUSTOM_SERVER_URL
          key: $CUSTOM_SERVER_API_KEY
        EOF
        fi

        if [ "${#servers[@]}" -eq 0 ]; then
          echo "Error: At least one API key must be provided"
          exit 1
        fi

        if [ -n "${{ inputs.histories }}" ]; then
          cat << EOF > ~/.abm/histories.yml
        ${{ inputs.histories }}
        EOF
        elif [ -n "${{ inputs.histories-path }}" ]; then
          cp ${{ inputs.histories-path }} ~/.abm/histories.yml
        else
          #echo "Error: Either histories or histories-path must be provided"
          #exit 1
          echo "No histories provided. Expecting a histories.yml file in the repository"
        fi

        if [ -n "${{ inputs.workflows }}" ]; then
          cat << EOF > ~/.abm/workflows.yml
        ${{ inputs.workflows }}
        EOF
        elif [ -n "${{ inputs.workflows-path }}" ]; then
          cp ${{ inputs.workflows-path }} ~/.abm/workflows.yml
        else
          #echo "Error: Either workflows or workflows-path must be provided"
          #exit 1
          echo "No workflows provided. Expecting a workflows.yml file in the repository"
        fi

        #mkdir -p benchmarks
        if [ -n "${{ inputs.benchmarks-file }}" ]; then
          cat << EOF > benchmark.yml
        ${{ inputs.benchmarks-file }}
        EOF
        elif [ -n "${{ inputs.benchmarks-file-path }}" ]; then
          cp ${{ inputs.benchmarks-file-path }} benchmark.yml
        else
          #echo "Error: Either benchmarks-file or benchmarks-file-path must be provided"
          #exit 1
          echo "No benchmark provided. Expecting a benchmark.yml file in the repository"
        fi

        #mkdir -p experiments
        if [ -n "${{ inputs.experiments-file }}" ]; then
          cat << EOF > experiment.yml
        ${{ inputs.experiments-file }}
        EOF
        elif [ -n "${{ inputs.experiments-file-path }}" ]; then
          cp ${{ inputs.experiments-file-path }} experiment.yml
        else
          #echo "Error: Either experiments-file or experiments-file-path must be provided"
          #exit 1
          echo "No experiment provided. Expecting a experiment.yml file in the repository"
        fi

        source .venv/bin/activate
        HISTORY_NAME=$(cat .abm/histories.yml | head -n 1 | awk -F':' '{print $1}')
        WORKFLOW_NAME=$(cat .abm/workflows.yml | head -n 1 | awk -F':' '{print $1}')
        for server in "${servers[@]}"; do
            abm $server workflow import $WORKFLOW_NAME
            abm $server history import $HISTORY_NAME
        done

    - name: Run experiment
      run: |
        source .venv/bin/activate
        abm experiment run experiment.yml

    - name: Summarize results
      run: |
        source .venv/bin/activate
        EXP_NAME=$(cat experiment.yml | grep 'name:' | awk -F':' '{print $1}')
        abm experiment summarize metrics/$EXP_NAME

